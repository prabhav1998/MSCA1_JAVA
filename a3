import java.io.*;

class Employee
{	
	protected double salary;
	private String name,department;
	int eid;
	static int id=1;
	Employee(){}

	Employee(String name, String department, double salary)
	{
		this.name=name;
		this.department=department;
		this.salary=salary;
		eid=id;
		id++;
	}

	void display()
	{
		System.out.println("ID of employee is :"+eid);
		System.out.println("name of employee is :"+name);
		System.out.println("department of employee :"+department);
		System.out.println("salary of employee :"+salary);	
	}


	void max()
	{		
		
	}
}
class Manager extends Employee
{
	private double bonus=0.3; 
	Manager(){}	
	//double salary;
	Manager(String name, String department, double salary)
	{
		super(name,department,salary);
//		this.salary=salary;			
	}
	
	void display()
	{
		super.display();
		super.salary+=super.salary*bonus;
		System.out.println("Total salary of  employee is : "+super.salary);	
	}

	
	void sort(Manager M[])
	{
		Manager temp;
		for(int i=0;i<M.length;i++)
			for(int j=0;j<M.length-i-1;j++)
			{
				if(M[j].salary < M[j+1].salary)
				{
					temp=M[j];
					M[j]=M[j+1];
					M[j+1]=temp;
				}
			}
	
	}

}

class Program1
{
	public static void main(String args[]) throws IOException
	{
	BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
	double salary;
	String name,department;
	System.out.println("How many employee you want");
	int n= Integer.parseInt(br.readLine());
	Manager M[] = new Manager[n];
	Manager mc = new Manager();
		for(int i=0;i<n;i++)
		{
			System.out.println("Enter name of employee : ");
			name = br.readLine();
			System.out.println("Enter department of employee :");
			department= br.readLine();		
			System.out.println("Enter salary of employee :");
			while(true)
			{
				salary = Double.parseDouble(br.readLine());
				if(salary<=0)
					System.out.println("Invalid Enter valid salary");
				else
					break; 						
			}

			M[i]= new Manager(name,department,salary);
 		}

		

		mc.sort(M);

		double max = M[0].salary;
		System.out.println("Manager details with maximum salry:");
		for(int i=0;i<M.length;i++)
		{
			if(M[i].salary == max)
			{
				System.out.println("");
				M[i].display();
			}			
			else
				break;
		}
	}
}



import java.io.*;

abstract class Shape
{
	final double pi=3.14;
	abstract void area();
	abstract void volume();
}

class Sphere extends Shape
{
	double r;
	void accept() throws IOException
	{
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		System.out.println("Enter radius for sphere");
		while(true)
		{
			r = Double.parseDouble(br.readLine());
			if(r>0)
				break;
			else
				System.out.println("please enter valid radius");
		}	
	}	
	
	void area()
	{
		System.out.println("Area of sphere is :"+(4*pi*r*r));
	}

	void volume()
	{
		System.out.println("volume of sphere :"+((4/3)*pi*r*r));
	}

}

class Cone extends Shape
{
	double r,h;
	void accept() throws IOException
	{
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		System.out.println("Enter radius for cone");
		 
		while(true)
		{
			r = Double.parseDouble(br.readLine());
			if(r>0)
				break;
			else
				System.out.println("please enter valid radius");
		}
		System.out.println("Enter height for cone");
		while(true)
		{
			 h = Double.parseDouble(br.readLine());
			if(h>0)
				break;
			else
				System.out.println("please enter valid height");
		}
		
	}


	void area()
	{
		System.out.println("Area of cone :"+(pi*r*(r + Math.pow(h*h+r*r,0.5))));
	}

	void volume()
	{
		System.out.println("Volume of cone :"+1/3*pi*r*r);
	}
}


class Cylinder extends Shape
{
	double r,h;
	void accept() throws IOException
	{
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		System.out.println("Enter radius for cylinder");
		while(true)
		{
			r = Double.parseDouble(br.readLine());
			if(r>0)
				break;
			else
				System.out.println("please enter valid radius");
		}
		
		System.out.println("Enter height for cylinder");
		while(true)
		{
			 h = Double.parseDouble(br.readLine());
			if(h>0)
				break;
			else
				System.out.println("please enter valid height");
		}
		
	}
	
	void area()
	{
		System.out.println("area of cylinder :"+(2*pi*r));
	}

	void volume()
	{
		System.out.println("volume of cylinder :"+pi*r*r*h);
	}

}


class Box extends Shape
{
	double l,b,h;
	void accept() throws IOException
	{
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		System.out.println("Enter length for box");
		while(true)
		{
			 l = Double.parseDouble(br.readLine());
			if(l>0)
				break;
			else
				System.out.println("please enter valid length");
		}
		 
		System.out.println("Enter breadth for box");
		while(true)
		{
			 b = Double.parseDouble(br.readLine());
			if(b>0)
				break;
			else
				System.out.println("please enter valid breadth");
		}
		
		System.out.println("Enter height for box");
		while(true)
		{
			 h = Double.parseDouble(br.readLine());
			if(h>0)
				break;
			else
				System.out.println("please enter valid height");
		}
		
		
	}
	
	void area()
	{
		System.out.println("area of box :"+(2*l*h+2*b*h+2*l*b));
	}

	void volume()
	{
		System.out.println("volume of box :"+(l*b*h));
	}
}

class Program2
{
	public static void main(String args[])	throws IOException
	{
		Sphere s= new Sphere();
		Cone c = new Cone();
		Cylinder cl = new Cylinder();
		Box  b = new Box();
		
		s.accept();
		s.area();
		s.volume();
		
		c.accept();
		c.area();
		c.volume();


		cl.accept();
		cl.area();
		cl.volume();


		b.accept();
		b.area();
		b.volume();

		
	}
}




import java.io.*;

abstract class Staff
{
	String name,add;
}

class FullTimeStaff extends Staff
{
	double salary;
	String department;

	FullTimeStaff(){}
	FullTimeStaff(double salary,String department,String name,String add)
	{	
		this.salary=salary;
		this.department=department;
		this.name=name;
		this.add=add;
	}

	public String toString()
	{
		return "name is : "+name+"\naddress is :"+add+"\ndepartment is  :"+ department+"\nsalary is :"+salary;
	}
}


class PartTimeStaff extends Staff
{

	double numberofhours,rateperhours;	
	PartTimeStaff(){}
	
	PartTimeStaff(double numberofhours,double rateperhours,String name,String add)
	{	
		this.numberofhours=numberofhours;
		this.rateperhours=rateperhours;
		this.name=name;
		this.add=add;
	}
		
	
	public String toString()
	{
		return "name is : "+name+"\naddress is :"+add+"\nnumber of hours :"+ numberofhours+"\nrate per hour :"+rateperhours;
	}
		
}


class Program3
{
	public static void main(String args[]) throws IOException
	{
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		int ch;
		do
		{
		System.out.println("Enter your choice ");
		System.out.println("1 for Full time staff ");
		System.out.println("2 for Part time staff ");
		System.out.println("3 exit ");
		ch = Integer.parseInt(br.readLine());
		

			switch(ch)
			{
				case 1:
					String name,add,department;
					double salary;
					System.out.println("How many elements you want :");
					int n = Integer.parseInt(br.readLine());
					FullTimeStaff F[] = new FullTimeStaff[n];
					for(int i=0;i<n;i++)
					{
						System.out.println("Enter name :");
						name=br.readLine();
						System.out.println("Enter  address :");
						add=br.readLine();
						System.out.println("Enter department :");
						department=br.readLine();
						System.out.println("Enter  salary:");
						while(true)
						{
							salary = Double.parseDouble(br.readLine());
							if(salary<=0)
								System.out.println("Invalid salary pls enter valid salary");
							else
								break;
						}
					
						F[i] = new FullTimeStaff(salary,department,name,add);
					}
				
					for(int i=0;i<n;i++)
					{	
						System.out.println();
						System.out.println(F[i]);
					}

					break;
	
				case 2:	

					String name1,add1;
					double numberofhours,rateperhours;
					System.out.println("How many elements you want :");
					int n1 = Integer.parseInt(br.readLine());
					PartTimeStaff P[] = new PartTimeStaff[n1];
					for(int i=0;i<n1;i++)
					{
						
						System.out.println("Enter name :");
						name1=br.readLine();
						System.out.println("Enter  address :");
						add1=br.readLine();
						System.out.println("Enter number of hours  :");
						while(true)
						{
							numberofhours = Double.parseDouble(br.readLine());
							if(numberofhours<=0)
								System.out.println("Invalid numberofhours pls enter valid numberofhours");
							else
								break;
						}
					
						System.out.println("Enter rate per hours :");
						while(true)
						{
							rateperhours = Double.parseDouble(br.readLine());
							if(rateperhours<=0)
								System.out.println("Invalid rateperhours pls enter valid rateperhours");
							else
								break;
						}
					
						P[i] = new PartTimeStaff(numberofhours,rateperhours,name1,add1);
					}
				
					for(int i=0;i<n1;i++)
					{	
						System.out.println();
						System.out.println(P[i]);
					}
				
					break;
	
				case 3:System.exit(0);

				default:System.out.println("Invalid choice");break;
				
			}
		}while(ch!=3);
	}
}


















