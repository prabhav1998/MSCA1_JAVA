import java.awt.*;
import java.applet.*;
import java.awt.event.*;

/*
<applet code = "Program1" width = 600 height = 300>
</applet>
*/

public class Program1 extends Applet implements MouseMotionListener
{
	Label l2,l4;
	public void init()
	{
		setLayout(new GridLayout(2,3));
		Label l1 = new Label("Mouse X");
		l2 = new Label();
		l2.addMouseMotionListener(this);
		Label l3 = new Label("Mouse Y");
		l4 = new Label();
		l4.addMouseMotionListener(this);

		add(l1);
		add(l2);
		add(l3);
		add(l4);
	}
	public void mouseMoved(MouseEvent me)
	{
		l2.setText(String.valueOf(me.getX()));
		l4.setText(String.valueOf(me.getY()));
	}
	public void mouseDragged(MouseEvent me)
	{}
}
+++++++++++++++++
import java.awt.*;
import javax.swing.*;
import java.awt.event.*;

public class Program2 extends JFrame implements ActionListener, KeyListener
{
	JLabel l1,l2,l3,l4,l22,l33,l44;
	JTextField t1;
	JButton b1,b2;
	int n;
	Program2()
	{
		JFrame f = new JFrame(); 
		l1 = new JLabel("Decimal");
		t1 = new JTextField(10);
		t1.addKeyListener(this);
		
		l2 = new JLabel("Binary");
		l22 = new JLabel();
		l3 = new JLabel("Octal");
		l33 = new JLabel();
		l4 = new JLabel("Hexadecimal");
		l44 = new JLabel();
		
		b1 = new JButton("Convert");
		b1.addActionListener(this);
		b2 = new JButton("Exit");
		b2.addActionListener(this);
				
		f.setLayout(new GridLayout(5,2));
		
		f.add(l1);
		f.add(t1);
		f.add(l2);
		f.add(l22);
		f.add(l3);
		f.add(l33);
		f.add(l4);
		f.add(l44);
		f.add(b1);
		f.add(b2);
		f.setSize(400,250);
		f.setVisible(true);
		f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
	}
	public void keyTyped(KeyEvent ke)
	{
		char ch = ke.getKeyChar();
		if((ch>='0' && ch<='9') || ch=='\b' || ch==(char)127)
		{
			t1.setEditable(true);
		}
		else
		{
			t1.setEditable(false);
		}
	}
	public void keyPressed(KeyEvent ke)
	{}
	public void keyReleased(KeyEvent ke)
	{}
	public void actionPerformed(ActionEvent ae)
	{
		if(ae.getSource()==b1)
		{
			n = Integer.valueOf(t1.getText());
			l22.setText(Integer.toBinaryString(n));
			l33.setText(Integer.toOctalString(n));
			l44.setText(Integer.toHexString(n));
		}
		else if(ae.getSource()==b2)
		{
			System.exit(0);
		}
	}
	public static void main(String args[])
	{
		new Program2();
	}
}
++++++++++++++
import java.awt.*;
import javax.swing.*;
import java.awt.event.*;

public class Program3 extends JFrame implements ActionListener
{
	JButton b1,b2;
	JComboBox c1;
	JTextField t1;
	ButtonGroup b;
	JList ls;
	Program3()
	{
		JFrame frame = new JFrame();
		JPanel p1 = new JPanel();
		p1.setLayout(new GridLayout(3,3,15,55));
		JLabel l1 = new JLabel("Font");
		JLabel l2 = new JLabel("Font Style");
		JLabel l3 = new JLabel("Size");
		c1 = new JComboBox();
		
		String fontArray[];
		GraphicsEnvironment ge = GraphicsEnvironment.getLocalGraphicsEnvironment();
		fontArray = ge.getAvailableFontFamilyNames();

		for(int i=0; i<fontArray.length; i++)
		{
			c1.addItem(fontArray[i]);
		}
		
		b = new ButtonGroup();
		JRadioButton r1 = new JRadioButton("Bold");
		r1.setActionCommand("Bold");
		b.add(r1);

		JRadioButton r2 = new JRadioButton("Italic");
		r2.setActionCommand("Italic");
		b.add(r2);

		JPanel rButton = new JPanel();
		rButton.setLayout(new GridLayout(2,1));
		rButton.add(r1);
		rButton.add(r2);
		
		
		t1 = new JTextField("Hello Everyone");
		b1 = new JButton("Apply");
		b1.addActionListener(this);
		b2 = new JButton("Exit");
		b2.addActionListener(this);
		
		DefaultListModel listModel = new DefaultListModel();
		for(int i=8; i<=72; i++)
		{
			listModel.addElement(String.valueOf(i));
		}
		ls = new JList(listModel);
		
		JScrollPane scrollPane = new JScrollPane(ls);
		scrollPane.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_ALWAYS);
		
		p1.add(l1);
		p1.add(l2);
		p1.add(l3);
		p1.add(c1);
		p1.add(rButton);
		p1.add(scrollPane);
		p1.add(t1);
		p1.add(b1);
		p1.add(b2);
		frame.add(p1);	
		frame.setSize(400,300);
		frame.setVisible(true);
	}
	public void actionPerformed(ActionEvent ae)
	{
		if(ae.getSource()==b2)
		{
			System.exit(0);
		}
		if(ae.getSource()==b1)
		{
			String font = (String)c1.getSelectedItem();
			String fontStyle = (String)b.getSelection().getActionCommand();
			int fontSize = Integer.parseInt((String)ls.getSelectedValue());
			String fontStr = t1.getText();
			Font font1;
			if(fontStyle.equalsIgnoreCase("bold"))
			{
				font1 = new Font(font,Font.BOLD,fontSize);
			}
			else
			{
				font1 = new Font(font,Font.ITALIC,fontSize);
			}
			t1.setFont(font1); 
		}
	}
	public static void main(String args[])
	{
		new Program3();
	}
}
	
		
